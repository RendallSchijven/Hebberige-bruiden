@{
    //authentication ALWAYS FIRST
    if (!Security.IsAuthenticated())
    {
        Response.Redirect("Login");
    }

    var wishlists = new List<Wishlist>();
    //get all objects loaded, can be narrowed down with wishlists per user_id
    var db = Database.Open("test");
    var getQuery = "SELECT * FROM wishlists";

    foreach (var row in db.Query(getQuery))
    {
        wishlists.Add(new Wishlist(row.user_id, row.name, row.description, row.public_link, row.wishlist_id));
    }

    //example of creation of new wishlist(after database get otherwise redundant lists)
    //wishlists.Add(new Wishlist(1,"kekelijst", "hier komt een beschrijving", "gibberish", save: true));

    //Response.Write(Security.CreateAccount("kappa@kappa.nl", "keepo"));
    //Response.Write(Security.Login("kappa@kappa.nl", "keepo"));
    //Response.Write(Security.Login("kappa@.nl", "keepo"));
    //Response.Write(Security.Login("kappa@kappa.nl", "kappa"));

    //Response.Write(Session["user_id"]);
    //Response.Write(Session["email"]);
    //Response.Write(Session["public_link"]);

    //Response.Write(Security.IsAuthenticated());

    Layout = "_Layout.cshtml";
}

<!-- Page Heading -->
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            Wenslijsten
            <small>IdunnoWhatToPlaceHere</small>
        </h1>
    </div>
</div>
<!-- /.row -->

<!-- A for loop which displays each wishlist in wishlists -->
@foreach (Wishlist wishlist in wishlists)
{
    <!-- Wishlist Row -->
    <div class="row">

        <div class="col-md-12 portfolio-item">
            <a href="Item?wishlist_id=@wishlist.wishlist_id">
                <!-- Change size in url -->
                <!-- <img class="img-responsive img-thumbnail center-block" src="http://placehold.it/750x200" alt="kappa"> -->
                    <h1>@wishlist.name</h1>
                    <small>@wishlist.description</small>
            </a>
        </div>
    </div>
    <!-- /.row -->
}